version: '3'
services:

  arena:
    depends_on:
      - mockopenai
      - ghostcoder
    build:
      context : .
      dockerfile: arena/Dockerfile
    #entrypoint: bash -c "curl -d @/tmp/agent.json  --request POST http://ghostcoder:8000/ap/v1/agent/tasks  "
    environment:
      - TARGET=http://the_agency_3:8000
      
    entrypoint: python /tmp/run.py

  act_base: #root base of action
    build: vendor/act_base
    image: h4ckermike/act_base

  poetry_base: # use poetry
    image: h4ckermike/poetry_base
    build:
      context: vendor/python-poetry/build
      args:
        BASE_IMAGE: h4ckermike/act_base
        POETRY_VERSION: 1.6.1
    #entrypoint: /bin/bash
    #stdin_open: true # docker run -i
    #tty: true        # docker run -t

    depends_on:
      - act_base

  ai_ticket: # the ticket to unite
    image: h4ckermike/ai_ticket
    build:
      context: .
      args:
        BASE_IMAGE: h4ckermike/poetry_base
    depends_on:
      - poetry_base

  basic_agent: #basic agent
    image: h4ckermike/basic_agent
    build:
      context: vendor/basic_agent/
      args:
        BASE_IMAGE: h4ckermike/ai_ticket
    depends_on:
      - ai_ticket

  mockopenai: # interface
    depends_on:
      - ai_ticket
    environment:
      - GITHUB_PAT=${GITHUB_PAT}
      - GITHUB_REPO=${GITHUB_REPO}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    image: h4ckermike/mockopenai
    build:
      context: vendor/lollms/
      args:
        BASE_IMAGE: h4ckermike/ai_ticket
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
     - ./vendor/lollms/:/app/ #mount the source in for editing without reboot
    #ports:
    #  -  "8080:5000" #the app listens on mockopenai:5000 inside of docker

  autogpt: #the beast
    entrypoint: bash -c "poetry run pip install /opt/ai-ticket && poetry run autogpt --install-plugin-deps --skip-news -y   --ai-name 'meta-autogpt'  --ai-role 'you will introspect autogpt and reveal its internals via reflection and comprehension'  --ai-goal 'Observe your behaviour'    --ai-goal 'Reflect over your outcomes'  --ai-goal 'Orient yourself to your knowledge'     --ai-goal 'Decide on your next step'     --ai-goal 'Act on your chosen next experiment'  "


    # uncomment thse next 3 lines for debugging
    #entrypoint: /bin/bash
    #stdin_open: true # docker run -i
    #tty: true        # docker run -t
    environment:
      - GITHUB_PAT="${GITHUB_PAT}"
      - GITHUB_REPO="jmikedupont2/ai-ticket"
      - OPENAI_API_KEY=your-openai-api-key
      - OPENAI_API_BASE=http://mockopenai:8080/v1
    build:
      context: vendor/Auto-GPT/
      dockerfile: slim/Dockerfile
      args:
        BASE_IMAGE: h4ckermike/basic_agent

    depends_on:
      - basic_agent
      - mockopenai
    image: h4ckermike/autogpt

##
  autogpt-turbo:
    #entrypoint: /bin/bash
    stdin_open: true # docker run -i
    tty: true        # docker run -t

    entrypoint: bash -c "poetry run pip install /opt/ai-ticket && poetry run autogpt --install-plugin-deps --skip-news -y   --ai-name 'meta-autogpt'  --ai-role 'you will introspect autogpt and reveal its internals via reflection and comprehension'  --ai-goal 'Observe your behaviour'    --ai-goal 'Reflect over your outcomes'  --ai-goal 'Orient yourself to your knowledge'     --ai-goal 'Decide on your next step'     --ai-goal 'Act on your chosen next experiment'  "


    # uncomment thse next 3 lines for debugging
    #entrypoint: /bin/bash
    #stdin_open: true # docker run -i
    #tty: true        # docker run -t
    environment:
      - GITHUB_PAT="${GITHUB_PAT}"
      - GITHUB_REPO="jmikedupont2/ai-ticket"
      - OPENAI_API_KEY=your-openai-api-key
      - OPENAI_API_BASE=http://mockopenai:5000/v1
    volumes:
    # - /var/run/docker.sock:/var/run/docker.sock
     - ./vendor/Auto-GPT-Turbo/:/app/ #mount the source in for editing without reboot

    build:
      context: vendor/Auto-GPT-Turbo/
      dockerfile: Dockerfile
      args:
        BASE_IMAGE: h4ckermike/basic_agent
      #vendor/Auto-GPT-Turbo/Dockerfile

    #     vendor/AutoGPTv2/autogpts/autogpt/.devcontainer/Dockerfile
    # vend	or/AutoGPTv2/autogpts/autogpt/Dockerfile
  # auto_honey_comber:
  #   build:
  #     context: vendor/AutoGPTv2/
  #     dockerfile: autogpts/AutoHoneyComber/Dockerfile
  #     args:
  #       BASE_IMAGE: h4ckermike/basic_agent
  #   volumes:
  #    - ./vendor/AutoGPTv2/autogpts/AutoHoneyComber/:/app/ #mount the source in for editing without reboot

# vendor/AutoGPTv2/autogpts/AutoHoneyComber/Dockerfile
# vendor/AutoGPTv2/autogpts/forge/Dockerfile

  auto-gpt-chat-gpt-prompts:
    #--ai-settings ai_settings.yaml
    entrypoint: bash -c "python -m autogpt -y --ai-settings /tmp/ai_settings.yaml  "
    environment:
      - GITHUB_PAT="${GITHUB_PAT}"
      - GITHUB_REPO="jmikedupont2/ai-ticket"
      - OPENAI_API_KEY=your-openai-api-key
      - OPENAI_API_BASE=http://mockopenai:5000/v1

    build:
      context: vendor/Auto-GPT-chat-gpt-prompts/
      #dockerfile: Dockerfile
    volumes:
      - ./vendor/Auto-GPT-chat-gpt-prompts/:/app/ #mount the source in for editing witho
      - ./vendor/Auto-GPT/autogpts/autogpt/ai_settings.yaml:/tmp/ai_settings.yaml
      # vendor/Auto-GPT-chat-gpt-prompts/.devcontainer/Dockerfile
      #

  auto-gpt-aj:
    entrypoint: bash -c "python -m autogpt -y --ai-settings /tmp/ai_settings.yaml  "
    environment:
      - GITHUB_PAT="${GITHUB_PAT}"
      - GITHUB_REPO="jmikedupont2/ai-ticket"
      - OPENAI_API_KEY=your-openai-api-key
      - OPENAI_API_BASE=http://mockopenai:5000/v1
    build:
      context: vendor/Auto-GPT-aj
    volumes:
      - ./vendor/Auto-GPT-aj/:/app/ #mount the source in for editing witho
      - ./vendor/Auto-GPT/autogpts/autogpt/ai_settings.yaml:/tmp/ai_settings.yaml

  babyagi:
  #         
    entrypoint: bash -c "python babyagi.py --mode   "
    environment:
      - OBJECTIVE="Integrate babyagi with autogpt"
      - INITIAL_TASK="Compare the babyagi to autogpt"
      #- LLM_MODEL, DOTENV_EXTENSIONS,
      - INSTANCE_NAME="baby-autogpt",
      #COOPERATIVE_MODE,
      #JOIN_EXISTING_OBJECTIVE
      - GITHUB_PAT="${GITHUB_PAT}"
      - GITHUB_REPO="jmikedupont2/ai-ticket"
      - OPENAI_API_KEY=your-openai-api-key
      - OPENAI_API_BASE=http://mockopenai:5000/v1
    build:
      context: vendor/babyagi
    volumes:
      - ./vendor/babyagi/:/app/ #mount the source in for editing witho
      - ./vendor/Auto-GPT/autogpts/autogpt/ai_settings.yaml:/tmp/ai_settings.yaml
# vendor/babyagi/Dockerfile

# vendor/ScottGPT/autogpts/autogpt/.devcontainer/Dockerfile
# 
# vendor/ScottGPT/autogpts/forge/Dockerfile
  scott-gpt:
    entrypoint: bash -c "poetry run python -m autogpt -y --skip-news --ai-settings /tmp/ai_settings.yaml  "
    #entrypoint: bash -c "ls -latr  "
    environment:
      - GITHUB_PAT="${GITHUB_PAT}"
      - GITHUB_REPO="jmikedupont2/ai-ticket"
      - OPENAI_API_KEY=your-openai-api-key
      - OPENAI_API_BASE=http://mockopenai:5000/v1
    build:
      context: vendor/ScottGPT/autogpts/autogpt/
    volumes:
      - ./vendor/ScottGPT/autogpts/autogpt:/app/ #mount the source in for editing witho
      - ./vendor/Auto-GPT/autogpts/autogpt/ai_settings.yaml:/tmp/ai_settings.yaml

  jarvis:
    entrypoint: bash -c "poetry run python -m autogpt -y --skip-news --ai-settings /tmp/ai_settings.yaml  "
    #entrypoint: bash
    environment:
      - GITHUB_PAT="${GITHUB_PAT}"
      - GITHUB_REPO="jmikedupont2/ai-ticket"
      - OPENAI_API_KEY=your-openai-api-key
      - OPENAI_API_BASE=http://mockopenai:5000/v1
    build:
      context: vendor/Jarvis/
      dockerfile: autogpts/autogpt/Dockerfile
      args:
        BASE_IMAGE: h4ckermike/basic_agent
    volumes:
      - ./vendor/Jarvis/benchmark:/benchmark
      - ./vendor/Jarvis/autogpts/autogpt//app/ #mount the source in for editing witho
      - ./tests/ai_settings.yaml:/tmp/ai_settings.yaml
      
  the_agency_3:
    depends_on:
      - mockopenai
    #entrypoint: bash -c "poetry install &&  poetry run python -m autogpt -y --skip-news --ai-settings /tmp/ai_settings.yaml  "
    entrypoint: bash -c "poetry run python -m forge agent start ZEROAGPT"
    environment:
      - GITHUB_PAT="${GITHUB_PAT}"
      - GITHUB_REPO="jmikedupont2/ai-ticket"
      - OPENAI_API_KEY=your-openai-api-key
      - OPENAI_API_BASE=http://mockopenai:5000/v1
      - BOT_NAME=ZEROAGPT_03 #FIXME do we need this?
      - AGENT_WORKSPACE=/tmp/workspace/
      - AGENT_MODEL=/tmp/workspace/
      - OPENAI_MODEL="gpt-4"
      - DATABASE_STRING=sqlite:///agent.db
    build:
      context: vendor/TheAgency/
      dockerfile: autogpts/ZEROAGPT_03/Dockerfile
      args:
        BASE_IMAGE: h4ckermike/basic_agent

    volumes:
      - ./vendor/TheAgency/benchmark:/benchmark
      - ./vendor/TheAgency/autogpts/ZEROAGPT_03/:/app/ #mount the source in for editing witho
      - ./tests/ai_settings.yaml:/tmp/ai_settings.yaml
      
  mason_boom:
    entrypoint: bash -c "poetry run python -m autogpt -y --skip-news --ai-settings /tmp/ai_settings.yaml  "
    environment:
      - GITHUB_PAT="${GITHUB_PAT}"
      - GITHUB_REPO="jmikedupont2/ai-ticket"
      - OPENAI_API_KEY=your-openai-api-key
      - OPENAI_API_BASE=http://mockopenai:5000/v1
    build:
      context: vendor/MasonBoomPersonalAssistant/autogpts/autogpt/
    volumes:
      - ./vendor/MasonBoomPersonalAssistant/autogpts/autogpt/:/app/ #mount the source in for editixong witho
      - ./vendor/Auto-GPT/autogpts/autogpt/ai_settings.yaml:/tmp/ai_settings.yaml
      
  mason_boom_pa:
    entrypoint: bash -c "poetry run python -m autogpt -y --skip-news --ai-settings /tmp/ai_settings.yaml  "
    environment:
      - GITHUB_PAT="${GITHUB_PAT}"
      - GITHUB_REPO="jmikedupont2/ai-ticket"
      - OPENAI_API_KEY=your-openai-api-key
      - OPENAI_API_BASE=http://mockopenai:5000/v1
    build:
      context: vendor/MasonBoomPersonalAssistant/
      dockerfile: autogpts/PersonalAssistant/Dockerfile
    volumes:
      - ./vendor/MasonBoomPersonalAssistant/autogpts/PersonalAssistant/:/app/ #mount the source in for editing witho
      - ./vendor/Auto-GPT/autogpts/autogpt/ai_settings.yaml:/tmp/ai_settings.yaml
  mason_boom_testgpt:
    entrypoint: bash -c "poetry run python -m autogpt -y --skip-news --ai-settings /tmp/ai_settings.yaml  "
    environment:
      - GITHUB_PAT="${GITHUB_PAT}"
      - GITHUB_REPO="jmikedupont2/ai-ticket"
      - OPENAI_API_KEY=your-openai-api-key
      - OPENAI_API_BASE=http://mockopenai:5000/v1
    build:
      context: vendor/MasonBoomPersonalAssistant/
      dockerfile: autogpts/PersonalAssistant/Dockerfile
    volumes:
      - ./vendor/MasonBoomPersonalAssistant/autogpts/testgpt/:/app/ #mount the source in for editing witho
      - ./vendor/Auto-GPT/autogpts/autogpt/ai_settings.yaml:/tmp/ai_settings.yaml
  swarms_of_sparta:
    entrypoint: bash -c "poetry run python -m autogpt -y --skip-news --ai-settings /tmp/ai_settings.yaml  "
    environment:
      - GITHUB_PAT="${GITHUB_PAT}"
      - GITHUB_REPO="jmikedupont2/ai-ticket"
      - OPENAI_API_KEY=your-openai-api-key
      - OPENAI_API_BASE=http://mockopenai:5000/v1
    build:
      context: vendor/Swarms-Of-Sparta/autogpts/autogpt/
    volumes:
      - ./vendor/Swarms-Of-Sparta/autogpts/autogpt/:/app/ #mount the source in for editing witho
      - ./vendor/Auto-GPT/autogpts/autogpt/ai_settings.yaml:/tmp/ai_settings.yaml
  mljar:
    entrypoint: bash -c "poetry run python -m autogpt -y --skip-news --ai-settings /tmp/ai_settings.yaml  "
    environment:
      - GITHUB_PAT="${GITHUB_PAT}"
      - GITHUB_REPO="jmikedupont2/ai-ticket"
      - OPENAI_API_KEY=your-openai-api-key
      - OPENAI_API_BASE=http://mockopenai:5000/v1
    build:
      context: vendor/mljar-agent/autogpts/autogpt/
    volumes:
      - ./vendor/mljar-agent/autogpts/autogpt/:/app/ #mount the source in for editing witho
      - ./vendor/Auto-GPT/autogpts/autogpt/ai_settings.yaml:/tmp/ai_settings.yaml
# vendor/AutoGPT-trading/autogpts/autogpt/Dockerfile






# vendor/Godmode-GPT/Dockerfile
# vendor/SuperAGI/Dockerfile
# vendor/BillSchumacher/Dockerfile
# vendor/Auto-GPT-Graph/Dockerfile
# vendor/Multi-GPT/Dockerfile



#poetry run agent start forge --setup
#poetry run agbenchmark --mock
#poetry run agbenchmark --test=WriteFile

  ghostcoder:
    #ports:
    #  -  "8001:8000" # we can expose ports for each bot
    #CMD ["poetry", "run", "python", "autogpt/__main__.py"]
    entrypoint: bash -c "poetry run python -m forge agent start ghostcoder"
    #entrypoint: bash
    environment:
      - GITHUB_PAT="${GITHUB_PAT}"
      - GITHUB_REPO="jmikedupont2/ai-ticket"
      - OPENAI_API_KEY=your-openai-api-key
      - OPENAI_API_BASE=http://mockopenai:5000/v1
      - AGENT_WORKSPACE=/tmp/workspace/
      - DATABASE_STRING=sqlite:///agent.db
    build:
      context: vendor/aorwall/
      dockerfile: autogpts/ghostcoder/Dockerfile
      args:
        BASE_IMAGE: h4ckermike/basic_agent
    volumes:
      - ./vendor/aorwall/benchmark:/benchmark
      - ./vendor/aorwall/autogpts/ghostcoder:/app/ #mount the source in for editing witho
      - ./tests/ai_settings.yaml:/tmp/ai_settings.yaml
